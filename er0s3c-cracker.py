import hashlib
import os
import time

print('''
                            █████             ████████          
                          ███░░░███          ███░░░░███         
       ██████  ████████  ███   ░░███  █████ ░░░    ░███  ██████ 
      ███░░███░░███░░███░███    ░███ ███░░     ██████░  ███░░███
     ░███████  ░███ ░░░ ░███    ░███░░█████   ░░░░░░███░███ ░░░ 
     ░███░░░   ░███     ░░███   ███  ░░░░███ ███   ░███░███  ███
     ░░██████  █████     ░░░█████░   ██████ ░░████████ ░░██████ 
      ░░░░░░  ░░░░░        ░░░░░░   ░░░░░░   ░░░░░░░░   ░░░░░░    
 
%*(##((//((###(/*/(####//(##%##//(####/*/(((((/*/(((//*//(#(///(####((((##(((/((
###/*(#(((//(###(///(####///(####//(####///((((/*/((((/*//(((////(###(//(((((//(
((((((*/#(((//((#((///(####//(((###//(((#(//((((/**/(((/**/(#(////(###((/((((///
#(/((#((/*((((///(((((//((##(//(((((/(/((((/*/(((//*/(((//*//((///((###(//((((//
#%%#(/((#(/**(((////((//**/(###(//((#(///((((///(((/**/((/////(((/*/(###(//((((/
(/(#%%(//((((/*///(**//////*//((((((((#(///#((((//(//**/(///**/(((///(###((//(//
#(////#%%##(((((**////**///****/(/(/*///((/*///(/*//(/(*/((((///((((//((#((/////
//((((///(#((///((/**/******/****////**//((#(((((#(//(((/*/((((//((((//(#((/////
(////(#(////((((///(((,,*****//****///////###(*/(#((*///(/*////(*//(((/*/((//**/
//(##////(((///((((///((/,******////****///*,**///*/,*.,,**,**//*/**/////(/////*
////*/(((///(((////(((//**,. ....     . ..,,,***,..,,,.,.,,*,**.,...,*/*//((####
/**/////*/////*////*,.   ....,,,,,,**/**/***/***,,,*,,,...,,,,,,,,***//((#######
,*///***///***/**,  ..,**/*//(((####%#%######((((((((((######(*,.,**/(((((((####
*//*,,***,,****, ,.*//(((########%%%%%%%%%%##%%%%%%%%######%%%%#(*,,*/((((((((((
*********,,***...**/((######%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#//*#(((((((((
/(((((((((((/...,/(((####%####(((/////****/(((####%%###########%%%##/(,((((((((/
(((((((((((((,**//(###((((((((//////****//////(##%%%(//*/*****/(/*//(/*,*,,*****
(((((((((((((**//(######(((/*,,**,,,.(/*,,*//(#%%%%%#/*,* . ,*(##((##/,,,,,,,,,,
(((((((##((##%%#(####%%%%%%%%%%%%##%%%#%%%%#####%%%#######(((((###%%%(,,,,,,,,,,
(((((((#((##%%##(######%%%%%%%%%%%%%%#%##########%%%####%%%%%%%%%%%%%%*,,,,,,,,,
,,,,,,,*####(/#%((#########%%%%%%###########################%%%%%%%%%%#*,,,,,,,,
,,,.,.,,,(#(#%#%#(((#################%%%#(((/*////(((/*/(##%%%%%%%%%%%**,,,,,,,,
,,,,,,,,,,,/%##%#/((((##############%####%#(((((/////((((##%%%%%%%%%%(**********
.......,,,,,,,,*,,(((((#########(((((((((##((((((((((############%%#(*,,,******,
,,,,,,,,,,,,,*,,,,*((#(((((#####((((####(((##(/((((((((###((((#####(***,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,((((((((#####((#####((#((((((((((#############(//****,,,,,,,
,,,...........,,,,,,/((((((((((((((((##(((((((/////(((##########(///////////////
,,,,,,.,,,......,.%#(#(((//(((((((((######%#####(#####%######((/////////////////
...........,*/((#%&&&&((##(((/**/((((((((((((((((/((((((((((#&**//((////////////
//////////////(&&&&@@@@@&@&%(((///////////////*/////////%&&&&&&(/((((((/////////
(((((((((((#%%&&@@@@@@@@@@@@@@&&&%(///////////////(%%&&&&&@@@&&&%%%#(((((///////
((#%&@@@@@@@&@@@@@@@@@@@@@@@@@@@@@&&&&&%%%%##%#%&%&&&&&&&@@@@@@@@&&%%%&&&&(/////                                                                                                                                                                    
''')

def md5_sifrele(metin):
    """MD5 hash fonksiyonunu kullanarak metni şifreler."""
    md5_objesi = hashlib.md5()
    md5_objesi.update(metin.encode('utf-8'))
    return md5_objesi.hexdigest()

def md5_sifre_kir(hash_degeri, wordlist):
    """Wordlist kullanarak MD5 hash değerini çözer."""
    start_time = time.time()  

    with open(wordlist, 'r', encoding='utf-8') as dosya:
        for satir in dosya:
            satir = satir.strip()
            if md5_sifrele(satir) == hash_degeri:
                end_time = time.time()  
                kirma_suresi = end_time - start_time
                return satir, kirma_suresi
    
    return None, None

def md5_sifre_olustur(metin):
    """MD5 hash fonksiyonunu kullanarak metni şifreler."""
    return md5_sifrele(metin)

def main():
    """Ana fonksiyon."""
    try:
        while True:
            print("1 - MD5 Şifrele")
            print("2 - MD5 Şifresini Kır")
            print("3 - Çıkış")

            secim = input("Seçiminiz: ")

            if secim == "1":
                metin = input("Şifrelemek istediğiniz metni girin: ")
                sifrelenmis_metin = md5_sifre_olustur(metin)
                print(f"MD5 şifrelenmiş hali: {sifrelenmis_metin}\n")

            elif secim == "2":
                hash_degeri = input("Kırmak istediğiniz hash değerini girin: ")
                wordlist = input("Wordlist dosyasının yolunu girin: ")
                if os.path.exists(wordlist):
                    sonuc, kirma_suresi = md5_sifre_kir(hash_degeri, wordlist)
                    if sonuc:
                        print(f"Orijinal metin: {sonuc}")
                        print(f"Kırma süresi: {kirma_suresi} saniye\n")
                    else:
                        print("Eşleşme bulunamadı.\n")
                else:
                    print(f"HATA: Belirtilen wordlist dosyası ({wordlist}) bulunamadı.\n")

            elif secim == "3":
                print("Program kapatılıyor...")
                break

            else:
                print("Hatalı seçim! Lütfen tekrar deneyin.\n")

    except KeyboardInterrupt:
        print("\nCTRL + C tuş kombinasyonuna basıldı. Çıkış yapılıyor...")

if __name__ == "__main__":
    main()
